{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Redux\\\\Advanced Redux\\\\practice-project\\\\src\\\\App.js\",\n    _s2 = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { uiActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(_s(() => {\n    _s();\n\n    const dispatch = useDispatch();\n\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\"\n      }));\n      const response = await fetch(\"https://react-http-51c49-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent car data successfuly!\"\n      }));\n    };\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n    });\n  }, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n    return [useDispatch];\n  }), [cart, dispatch]); // PUT request overwrites existing data\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"/fxZ2TLhBQe6SaoN3dD6/S2D9tI=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React/Redux/Advanced Redux/practice-project/src/App.js"],"names":["Fragment","useEffect","useSelector","useDispatch","Cart","Layout","Products","uiActions","Notification","App","showCart","state","ui","cartIsVisible","cart","notification","dispatch","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAAA;;AACb,QAAMC,QAAQ,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASC,aAArB,CAA5B;AACA,QAAMC,IAAI,GAAGZ,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAxB;AACA,QAAMC,YAAY,GAAGb,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASG,YAArB,CAAhC;AAEAd,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACd,UAAMe,QAAQ,GAAGb,WAAW,EAA5B;;AACA,UAAMc,YAAY,GAAG,YAAY;AAC/BD,MAAAA,QAAQ,CACNT,SAAS,CAACW,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,YAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;AAFR,OAF0B,CAA5B;;AAQA,UAAI,CAACQ,QAAQ,CAACM,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAEDb,MAAAA,QAAQ,CACNT,SAAS,CAACW,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KA3BD;;AA4BAJ,IAAAA,YAAY,GAAGa,KAAf,CAAsBC,KAAD,IAAW;AAC9Bf,MAAAA,QAAQ,CACNT,SAAS,CAACW,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,QAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KARD;AASD,GAvCQ;AAAA,YACUlB,WADV;AAAA,MAuCN,CAACW,IAAD,EAAOE,QAAP,CAvCM,CAAT,CALa,CA6Cb;;AACA,sBACE,QAAC,QAAD;AAAA,eACGD,YAAY,iBACX,QAAC,YAAD;AACE,MAAA,MAAM,EAAEA,YAAY,CAACI,MADvB;AAEE,MAAA,KAAK,EAAEJ,YAAY,CAACK,KAFtB;AAGE,MAAA,OAAO,EAAEL,YAAY,CAACM;AAHxB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,MAAD;AAAA,iBACGX,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADf,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;IA7DQD,G;UACUP,W,EACJA,W,EACQA,W;;;KAHdO,G;AA+DT,eAAeA,GAAf","sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { uiActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\n\nfunction App() {\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    const dispatch = useDispatch();\n    const sendCartData = async () => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"pending\",\n          title: \"Sending...\",\n          message: \"Sending cart data!\",\n        })\n      );\n      const response = await fetch(\n        \"https://react-http-51c49-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent car data successfuly!\",\n        })\n      );\n    };\n    sendCartData().catch((error) => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n    });\n  }, [cart, dispatch]);\n  // PUT request overwrites existing data\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}