{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Food Order App\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD_CAR_ITEM') {\n    const updatedItems = state.items.concat(action.item); //unlike push, concat adds it to a new array, so does not add it to old 'state' snapshot\n\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [carState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD_CART_ITEM',\n      item: item\n    });\n    console.log(item);\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE_CART_ITEM',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: carState.items,\n    totalAmount: carState.totalAmount,\n    addItem: addItemCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"K3iV20QrxQSdwcjbqYNXvrKvWVo=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/React/Food Order App/01-starting-project/src/store/CartProvider.js"],"names":["useReducer","CartContext","cartReducer","state","action","type","updatedItems","items","concat","item","updatedTotalAmount","totalAmount","price","amount","defaultCartState","CartProvider","props","carState","dispatchCartAction","addItemCartHandler","console","log","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAClC,MAAGA,MAAM,CAACC,IAAP,KAAc,cAAjB,EAAiC;AAC7B,UAAMC,YAAY,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBJ,MAAM,CAACK,IAA1B,CAArB,CAD6B,CAE7B;;AACA,UAAMC,kBAAkB,GAAGP,KAAK,CAACQ,WAAN,GAAoBP,MAAM,CAACK,IAAP,CAAYG,KAAZ,GAAoBR,MAAM,CAACK,IAAP,CAAYI,MAA/E;AACA,WAAO;AACHN,MAAAA,KAAK,EAAED,YADJ;AAEHK,MAAAA,WAAW,EAAED;AAFV,KAAP;AAIH;;AAED,SAAOI,gBAAP;AACH,CAZD;;AAcA,MAAMA,gBAAgB,GAAG;AACrBP,EAAAA,KAAK,EAAE,EADc;AAErBI,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMI,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAUC,kBAAV,IAAgClB,UAAU,CAACE,WAAD,EAAaY,gBAAb,CAAhD;;AAEA,QAAMK,kBAAkB,GAAGV,IAAI,IAAI;AAC/BS,IAAAA,kBAAkB,CAAC;AACfb,MAAAA,IAAI,EAAE,eADS;AAEfI,MAAAA,IAAI,EAAEA;AAFS,KAAD,CAAlB;AAIAW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACH,GAND;;AAQA,QAAMa,yBAAyB,GAAGC,EAAE,IAAI;AACpCL,IAAAA,kBAAkB,CAAC;AACfb,MAAAA,IAAI,EAAE,kBADS;AAEfkB,MAAAA,EAAE,EAAEA;AAFW,KAAD,CAAlB;AAIH,GALD;;AAOA,QAAMC,WAAW,GAAG;AAChBjB,IAAAA,KAAK,EAAEU,QAAQ,CAACV,KADA;AAEhBI,IAAAA,WAAW,EAAEM,QAAQ,CAACN,WAFN;AAGhBc,IAAAA,OAAO,EAAEN,kBAHO;AAIhBO,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAMA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACFR,KAAK,CAACW;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CA3BD;;GAAMZ,Y;;KAAAA,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\r\nimport CartContext from './cart-context'\r\n\r\nconst cartReducer = (state,action) => {\r\n    if(action.type==='ADD_CAR_ITEM') {\r\n        const updatedItems = state.items.concat(action.item) \r\n        //unlike push, concat adds it to a new array, so does not add it to old 'state' snapshot\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n\r\n    return defaultCartState;\r\n};\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0,\r\n}\r\n\r\nconst CartProvider = props => {\r\n    const [carState,dispatchCartAction] = useReducer(cartReducer,defaultCartState);\r\n\r\n    const addItemCartHandler = item => {\r\n        dispatchCartAction({\r\n            type: 'ADD_CART_ITEM',\r\n            item: item\r\n        });\r\n        console.log(item);\r\n    };\r\n\r\n    const removeItemFromCartHandler = id => {\r\n        dispatchCartAction({\r\n            type: 'REMOVE_CART_ITEM',\r\n            id: id\r\n        });\r\n    };\r\n\r\n    const cartContext = {\r\n        items: carState.items,\r\n        totalAmount: carState.totalAmount,\r\n        addItem: addItemCartHandler,\r\n        removeItem: removeItemFromCartHandler\r\n    };\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}